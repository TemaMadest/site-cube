$(function(){var t=$("#wrapper").width(),n=0,e=0,r=document,i=window,a=$(window).width(),s="",o=[$(".gr1"),$(".gr2"),$(".gr3"),$(".gr4")],c=!1,d=$("nav").find(".active"),l=o[0],f=function(){setTimeout(function(){c=!1},1500)},h=function(t){$("nav").find("a").removeClass("active"),$(t).addClass("active"),d=$(t)},p=function(t,n){return"prev"==n?$(t).parent().prev("li").index():"post"==n?$(t).parent().next("li").index():$(t).parent().index()},x=function(){n+=90,$("section").css({transform:"perspective(900px) translate3d(0px,0px,"+t/-2+"px) rotate3d(0,1,0,"+n+"deg)"}),l=l.index()>0?o[l.index()-1]:o[3],s=d.attr("href"),v(s,l),f()},u=function(){n-=90,$("section").css({transform:"perspective(900px) translate3d(0px,0px,"+t/-2+"px) rotate3d(0,1,0,"+n+"deg)"}),l=l.index()<3?o[l.index()+1]:o[0],s=d.attr("href"),v(s,l),f()},v=function(t,n){({}).url=t,$(n).children(".gr1_1").children(".inner").empty(),$(n).children(".gr1_1").children(".inner").load("/src/pages/"+t+".html")},g=function(t){$("section").css({transform:"perspective(900px) translate3d(0px,0px,"+t/-2+"px) rotate3d(0,1,0,"+n+"deg)","max-width":t}),$(".gr1").css({transform:"translate3d(0,0,"+t/2+"px)"}),$(".gr2").css({transform:"translate3d(0,0,"+t/2+"px) rotate3d(0,1,0,90deg)"}),$(".gr4").css({transform:"translate3d("+t/-2+"px,0,0) rotate3d(0,1,0,-90deg)"}),$(".gr3").css({transform:"translate3d(0,0,"+t/-2+"px) rotate3d(0,1,0,-180deg)"})};$(r).on("ready",function(){setTimeout(function(){$(".logo").addClass("close_logo")},2e3)}),$(i).on("resize",function(){t=$(window).width(),g(t),t>650&&$(".mobile-link").removeClass("close")}),$(".nav-panel").on("click",function(){return c||(location.hash=$(this).attr("href"),h($(this)),e<p($(this))&&(c=!0,u(),e=p($(this))),e>p($(this))&&(c=!0,x(),e=p($(this)))),!1}),$(".mobile-link").on("click",function(){$(this).hasClass("close")?($("nav").css({left:"-230px"}),$(this).removeClass("close")):($(this).addClass("close"),$("nav").css({left:"0"}))}),$(".left").on("click",function(){if(!c){var t=d.parent().prev("li").children("a");t&&e>0&&(c=!0,h(t),e=p(d,""),x(),location.hash=d.attr("href"))}}),$(".right").on("click",function(){if(!c){var t=d.parent().next("li").children("a");t&&e<6&&(c=!0,h(t),e=p(d,""),u(),location.hash=d.attr("href"))}}),function(t){t<1200&&g(t)}(a),function(){for(var t,n=location.href,e=0,r="",i=!1;e<n.length;)"#"==n[e]&&(t=e+1,i=!0),e++;r=!0===i?n.substring(t):"index";for(var a,s=$("nav").find("a"),o=0;a=s[o++];)if(a.getAttribute("href")==r){$(a).addClass("active"),d=$(a);break}}(),e=p(d,""),v(d.attr("href"),l)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
